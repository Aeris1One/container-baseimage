#!/bin/bash -e

CALL=$1

function iterate() {
  local ENV_VAR=$(complex-bash-env stripTablePrefix "$1")
  local ENV_VAR_TABLE=($ENV_VAR)
  local RETURN=()

  for subenvvar in "${ENV_VAR_TABLE[@]}"
  do
    subenvvar_value=${!subenvvar}

    if [ $(complex-bash-env isTable "$subenvvar_value") = true ] || [ $(complex-bash-env isRow "$subenvvar_value") = true ]; then
        RETURN+=($subenvvar)
    elif [ -n "${subenvvar_value}" ]; then
      RETURN+=($subenvvar_value)
    else
      RETURN+=($subenvvar)
    fi
  done

  echo ${RETURN[@]}
}

function isTable() {
  local ENV_VAR=$1
  if [ $(echo $ENV_VAR | grep "#COMPLEX_BASH_ENV:TABLE:" -c ) -eq 1 ]; then
    echo true
  else
    echo false
  fi
}

function isRow() {
  local ENV_VAR=$1
  if [ $(echo $ENV_VAR | grep "#COMPLEX_BASH_ENV:ROW:" -c ) -eq 1 ]; then
    echo true
  else
    echo false
  fi
}

function getRowKey() {
  local ENV_VAR=$1
  if [ $(complex-bash-env isRow "$ENV_VAR") = true ]; then
    local ENV_VAR=$(complex-bash-env stripRowPrefix $ENV_VAR)
    local ENV_VAR_TABLE=($ENV_VAR)
    echo "${ENV_VAR_TABLE[0]}"
  else
    echo "$ENV_VAR is not a complex bash env row"
  fi
}

function getRowValue() {
  local ENV_VAR=$1
  if [ $(complex-bash-env isRow "$ENV_VAR") = true ]; then
    local ENV_VAR=$(complex-bash-env stripRowPrefix $ENV_VAR)
    local ENV_VAR_TABLE=($ENV_VAR)
    echo "${ENV_VAR_TABLE[1]}"
  else
    echo "$ENV_VAR is not a complex bash env row"
  fi
}

function stripTablePrefix() {
  local ENV_VAR=$1
  stripPrefix "$ENV_VAR" "#COMPLEX_BASH_ENV:TABLE:"
}

function stripRowPrefix() {
  local ENV_VAR=$1
  stripPrefix "$ENV_VAR" "#COMPLEX_BASH_ENV:ROW:"
}

function stripPrefix() {
  local ENV_VAR=$1
  local PREFIX=$2
  local RETURN=${ENV_VAR#$PREFIX}
  echo $RETURN
}

shift
$CALL "$@"
